# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# name: Unit test & lint for Dashboard Service
# on:
#   pull_request:
#     branches: [ "main" ]
#     paths:
#       - 'microservices/dashboard/**'
#       - 'common/**'
#       - '.github/workflows/unit_test_linter_dashboard.yaml'
#       - '.pylintrc'
#   workflow_dispatch:

# env:
#   PROJECT_ID: gcp-classroom-dev

# # cookiecutter:raw 
# jobs:
#   unit-test:
#     runs-on: ubuntu-latest
#     timeout-minutes: 15
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: [3.9]
#         target-folder: [
#           microservices/dashboard,
#         ]
#     steps:
#     - uses: actions/checkout@v3

#     - name: Install gcloud
#       uses: google-github-actions/setup-gcloud@v0
#       with:
#         project_id: ${{env.PROJECT_ID}}
#         service_account_key: ${{ secrets.FIREBASE_EMULATOR_SA_KEY }}
#         export_default_credentials: true

#     - name: Install Firebase CLI
#       run: |
#         curl -sL https://firebase.tools | bash

#     - name: Download Firestore emulator
#       run: |
#         firebase setup:emulators:firestore

#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ matrix.python-version }}

#     - name: Install dependencies
#       run: |
#         cd ${{ matrix.target-folder }}
#         python -m pip install --upgrade pip
#         python -m pip install pytest pytest-custom_exit_code pytest-cov pylint pytest-mock mock
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#         if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

#     - name: Run pytest with coverage
#       run: |
#         cd ${{ matrix.target-folder }}
#         PYTEST_ADDOPTS="--cache-clear --cov . " python -m pytest

#   linter:
#     runs-on: ubuntu-latest
#     timeout-minutes: 15
#     strategy:
#       fail-fast: false
#       matrix:
#         python-version: [3.9]
#         target-folder: [
#           microservices/dashboard,
#         ]
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python ${{ matrix.python-version }}
#       uses: actions/setup-python@v4
#       with:
#         python-version: ${{ matrix.python-version }}

#     - name: Install dependencies
#       run: |
#         cd ${{ matrix.target-folder }}
#         python -m pip install --upgrade pip
#         python -m pip install pylint
#         if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

#     - name: Lint with pylint
#       run: |
#         BASE_DIR=$(pwd)
#         cd ${{ matrix.target-folder }}
#         python -m pylint $(git ls-files '*.py') --rcfile=../../.pylintrc
# # cookiecutter:endraw 
