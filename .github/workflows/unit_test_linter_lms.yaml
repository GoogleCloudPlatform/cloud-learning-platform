# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Unit test & lint for LMS Microservice
on:
  pull_request:
    branches:
      - main
    paths:
      - 'microservices/lms/**'
      - 'common/**'
      - '.github/workflows/unit_test_linter_lms.yaml'
      - '.pylintrc'
  workflow_dispatch:

env:
  PROJECT_ID: gcp-classroom-dev
  CLASSROOM_ADMIN_EMAIL: ${{ secrets.CLASSROOM_ADMIN_EMAIL }}

# cookiecutter:raw 
jobs:
  unit-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        target-folder: [
          microservices/lms,
        ]
    steps:
    - uses: actions/checkout@v3

    - name: 'Set up Gcloud auth'
      id: 'gcloud_auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.FIREBASE_EMULATOR_SA_KEY }}'
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'


    - name: Install Firebase CLI
      run: |
        curl -sL https://firebase.tools | bash

    - name: Download Firestore emulator
      run: |
        firebase setup:emulators:firestore

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        BASE_DIR=$(pwd)
        cd ${{ matrix.target-folder }}
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
        if [ -f $BASE_DIR/common/requirements.txt ]; then pip install -r $BASE_DIR/common/requirements.txt; fi

    - name: Run pytest with coverage
      run: |
        BASE_DIR=$(pwd)
        cd ${{ matrix.target-folder }}/src
        PYTEST_ADDOPTS="--cache-clear --cov . " PYTHONPATH=$BASE_DIR/common/src python -m pytest

  linter:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        target-folder: [
          microservices/lms,
        ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        cd ${{ matrix.target-folder }}
        python -m pip install --upgrade pip
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi

    - name: Lint with pylint
      run: |
        BASE_DIR=$(pwd)
        cd ${{ matrix.target-folder }}/src
        python -m pylint $(git ls-files '*.py') --rcfile=$BASE_DIR/.pylintrc

# cookiecutter:endraw 
