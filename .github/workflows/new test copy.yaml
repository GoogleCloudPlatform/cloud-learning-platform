# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: E2E API Tests on GKE Microservices
on:
  workflow_call:
    secrets:
      DEPLOYMENT_DEV_SA_KEY:
        required: true
  pull_request:
    branches:
      - main
    # paths:
    #   - 'microservices/lti'
    #   - 'microservices/classroom_shim'

env:
  PROJECT_ID: core-learning-services-dev
  GKE_CLUSTER: core-learning-services-dev-us-central1
  GKE_ZONE: us-central1

jobs:
  e2e-ui-test-lms-admin-ui:
    runs-on: ubuntu-latest
    # needs: deploy
    # if: ${{contains(github.event.pull_request.labels.*.name, 'LMS_ADMIN_UI') || inputs.USE_GMAIL_ACCOUNT_STUDENT_ENROLLMENT == true}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Set up Gcloud auth"
        id: "gcloud_auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.DEPLOYMENT_DEV_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: Install GKE Auth Plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Connect to cluster
        run: |
          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Generate env variables
        id: generate-env
        run: |
          cd experimental/e2e-frontend
          python generate_env_vars.py >> $GITHUB_ENV
        env:
          GITHUB_ENV: $GITHUB_ENV

      - name: Install & run e2e tests
        uses: cypress-io/github-action@v5
        with:
          start: npx cypress run
          working-directory: experimental/e2e-frontend
          browser: chrome
          record: false
          env: |
            E2E_FACULTY_EMAIL:${{steps.convert_json_to_string_e2e_faculty_email.outputs.E2E_FACULTY_EMAIL}}
            E2E_FACULTY_PASSWORD:${{steps.convert_json_to_string_e2e_faculty_password.outputs.E2E_FACULTY_PASSWORD}}
